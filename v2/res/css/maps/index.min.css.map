{"version":3,"sources":["inc_header.scss","index.scss","bootstrap/v405/mixins/_breakpoints.scss"],"names":[],"mappings":"AAAA,OACI,MAAO,ICGX,KACI,UAAW,KAGf,8BAEA,oCADA,oCAEE,YACA,aAAc,EACd,QAAS,EC6CP,yBDxCA,4CACI,cAAe,OAAA,IAAA,KAGnB,mBACI,OAAO,EAGX,sBACI,YAAa,MACb,eAAgB,MAGpB,kCACI,WAAY,EAGhB,kBACI,OAAQ,OAAA,EAGZ,SACI,WAAY,MACX,WAAW,+BAAiC,OAAU,OAA3C,UACZ,wBAAyB,MACzB,qBAAsB,MACtB,mBAAoB,MACpB,gBAAiB,MAGrB,mBACI,WAAW,KACX,cAAc,MCLlB,yBDUA,sBACI,cAAe,MAAA,IAAA,KACf,aAAc,KAElB,4BACI,cAAe,MAAA,IAAA,KAGnB,iBACI,MAAO,IAGX,mBACI,YAAa,KACb,cAAe,KAGnB,kBACI,WAAY,OACZ,YAAa,MAGjB,mBACI,OAAQ,KAGZ,SACI,WAAW,+BAAiC,OAAU,OAA3C,UACX,wBAAyB,MACzB,qBAAsB,MACtB,mBAAoB,MACpB,gBAAiB,MACjB,WAAY,MAGhB,mBACI,WAAW,MACX,cAAc,MClClB,gDDuCE,SACM,iBAAkB,YAClB,iBAAqB,+BACrB,oBAAqB,MAAA,OACrB,kBAA6B,UAC7B,sBAA4B,KAC5B,sBAAuB,IAG/B,kBACI,WAAY,KACZ,YAAa,QClDjB,+CDuDA,kBACI,WAAY,MAKhB,SACQ,iBAAkB,YAClB,iBAAqB,+BACrB,oBAAqB,MAAA,OACrB,kBAA6B,UAC7B,sBAA4B,KAC5B,sBAAuB,IACvB,gBAAiB,ICjFzB,yBDwFA,SACI,sBAAuB,KACvB,sBAAuB,IACvB,gBAAiB,IAGrB,SACI,WAAW,+BAAiC,OAAU,OAA3C,UACX,wBAAyB,MACzB,qBAAsB,MACtB,mBAAoB,MACpB,gBAAiB,MACjB,WAAY,OAKpB,SACI,WAAW,KAGf,SACI,QAAS,aACT,eAAgB,OAChB,MAAO,KAIX,IACI,UAAW","file":"../index.min.css","sourcesContent":["header {\r\n    color: red;\r\n}","@import 'inc_header';\r\n@import 'bootstrap/v405/variables';\r\n@import 'bootstrap/v405/mixins';\r\n\r\nhtml {\r\n    font-size: 14px;\r\n}\r\n\r\n.navbar-light .navbar-toggler, \r\n.navbar-light .navbar-toggler:hover,\r\n.navbar-light .navbar-toggler:focus {\r\n  border:none;\r\n  border-width: 0;\r\n  outline: none;\r\n}\r\n\r\n\r\n@include media-breakpoint-only(xs) { \r\n    .navbar-toggleable-xs .navbar-nav .nav-item {\r\n        border-bottom: dotted 1px #ddd;\r\n    }\r\n\r\n    .navbar .container {\r\n        margin:0;\r\n    }\r\n\r\n    .navbar-nav .nav-link {\r\n        padding-top: 0.5rem;\r\n        padding-bottom: 0.5rem;\r\n    }\r\n\r\n    .navbar-toggleable-xs .navbar-nav {\r\n        margin-top: 0;\r\n    }\r\n\r\n    #img-page01-dalat {\r\n        margin: 1.5rem 0;\r\n    }\r\n\r\n    #page-03 {\r\n        min-height: 300px;\r\n         background:url('/res/images/page03-bg.png') no-repeat center center;\r\n        -webkit-background-size: cover;\r\n        -moz-background-size: cover;\r\n        -o-background-size: cover;\r\n        background-size: cover;\r\n    }\r\n\r\n    #img-page03-dichvu {\r\n        margin-top:5rem;\r\n        margin-bottom:1rem;\r\n    }\r\n }\r\n\r\n @include media-breakpoint-up(sm) { \r\n    .navbar-nav .nav-item {\r\n        border-bottom: solid 1px #fff;\r\n        margin-right: 1rem;\r\n    }\r\n    .navbar-nav .nav-item:hover {\r\n        border-bottom: solid 1px #ddd;\r\n    }\r\n\r\n    #img-page01-logo {\r\n        width: 85%;\r\n    }\r\n\r\n    #img-page01-slogan {\r\n        margin-left: -10%;\r\n        margin-bottom: 1rem;\r\n    }\r\n\r\n    #img-page01-dalat {\r\n        margin-top: 2.5rem;\r\n        margin-left: -3rem;\r\n    }\r\n\r\n    #page01-padding-01 {\r\n        height: 3rem;\r\n    }  \r\n\r\n    #page-03 {\r\n        background:url('/res/images/page03-bg.png') no-repeat center center;\r\n        -webkit-background-size: cover;\r\n        -moz-background-size: cover;\r\n        -o-background-size: cover;\r\n        background-size: cover;\r\n        min-height: 400px;\r\n    }     \r\n\r\n    #img-page03-dichvu {\r\n        margin-top:10rem;\r\n        margin-bottom:3rem;\r\n    }\r\n }\r\n\r\n @include media-breakpoint-only(lg) { \r\n      #page-01 {\r\n            background-color: transparent; /*Default bg, similar to the background's base color*/\r\n            background-image: url(\"/res/images/page01-bg.png\");\r\n            background-position: right bottom; /*Positioning*/\r\n            background-repeat: no-repeat; /*Prevent showing multiple background images*/\r\n            background-position-x: 280%;\r\n            background-position-y: 40%;\r\n        }\r\n\r\n    #img-page01-dalat {\r\n        margin-top: 2.0rem;\r\n        margin-left: -10rem;\r\n    }\r\n}\r\n\r\n@include media-breakpoint-only(sm) { \r\n    #img-page01-dalat {\r\n        margin-top: 1rem;\r\n    }\r\n}\r\n\r\n@include media-breakpoint-up(xs) { \r\n    #page-01 {\r\n            background-color: transparent; /*Default bg, similar to the background's base color*/\r\n            background-image: url(\"/res/images/page01-bg.png\");\r\n            background-position: right bottom; /*Positioning*/\r\n            background-repeat: no-repeat; /*Prevent showing multiple background images*/\r\n            background-position-x: 130%;\r\n            background-position-y: 70%;\r\n            background-size: 50%;\r\n        }\r\n\r\n        \r\n}\r\n\r\n@include media-breakpoint-up(lg) {\r\n    #page-01 {\r\n        background-position-x: 135%;\r\n        background-position-y: 90%;\r\n        background-size: 55%;\r\n    }\r\n\r\n    #page-03 {\r\n        background:url('/res/images/page03-bg.png') no-repeat center center;\r\n        -webkit-background-size: cover;\r\n        -moz-background-size: cover;\r\n        -o-background-size: cover;\r\n        background-size: cover;\r\n        min-height: 600px;\r\n    }     \r\n}\r\n\r\n\r\n#page-02 {\r\n    margin-top:3rem;\r\n}\r\n\r\n.vcenter {\r\n    display: inline-block;\r\n    vertical-align: middle;\r\n    float: none;\r\n}\r\n\r\n\r\n.fa {\r\n    font-size: 2rem;\r\n}\r\n\r\n@import 'inc_footer';","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 544px, md: 768px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 544px, md: 768px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 544px, md: 768px))\n//    544px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.1.\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 544px, md: 768px))\n//    767px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - 1px, null);\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  @include media-breakpoint-up($name, $breakpoints) {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  @include media-breakpoint-up($lower, $breakpoints) {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n"]}